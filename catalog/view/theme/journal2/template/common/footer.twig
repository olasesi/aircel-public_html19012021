{% if not constant('JOURNAL_INSTALLED') %}
  <h3>Journal Installation Error</h3>
  <p>Make sure you have uploaded all Journal files to your server and successfully replaced <b>system/engine/front.php</b> file.</p>
  <p>Please read this: <a href="http://docs.digital-atelier.com/opencart/journal/#/settings/install" target="_blank">here</a>.</p>
{% endif %}
</div>
{% if journal2.settings.get('config_bottom_modules') %}
  <div id="bottom-modules">
    {{ journal2.settings.get('config_bottom_modules') }}
    <!-- WhatsHelp.io widget -->
{#<script type="text/javascript">#}
{#    (function () {#}
{#        var options = {#}
            {#whatsapp: "+2347040002622", // WhatsApp number#}
            {#call_to_action: "Chat With Us!", // Call to action#}
            {#position: "right", // Position may be 'right' or 'left'#}
{#        };#}
{#        var proto = document.location.protocol, host = "whatshelp.io", url = proto + "//static." + host;#}
{#        var s = document.createElement('script'); s.type = 'text/javascript'; s.async = true; s.src = url + '/widget-send-button/js/init.js';#}
{#        s.onload = function () { WhWidgetSendButton.init(host, proto, options); };#}
{#        var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(s, x);#}
{#    })();#}
{#</script>#}
<!-- /WhatsHelp.io widget -->
  </div>
{% endif %}
<footer class="{{ journal2.settings.get('fullwidth_footer') }}">
  <div id="footer">
    {{ journal2.settings.get('config_footer_menu') }}
  </div>
  <div class="bottom-footer {{ journal2.settings.get('boxed_bottom') }}">
    <div class="{{ journal2.settings.get('config_footer_classes') }}">
      {% if journal2.settings.get('config_copyright') %}
        <div class="copyright">{{ journal2.settings.get('config_colpyright') }}</div>
      {% endif %}
      {% if journal2.settings.get('config_payments') %}
        <div class="payments" style="float: left">
          {#<a href="tel:+2347040002622" style="text-decoration : none;"><span class="icon-phone"></span><img src="https://www.obejor.com.ng/image/catalog/logos/callicon.jpg" style="width:36px;height:33px;" /></a> #}
          {% for payment in journal2.settings.get('config_payments') %}
            {% if payment.url %}
              <a href="{{ payment.url }}" {{ payment.target }}><img {{ staticCall('Journal2Utils', 'imgElement', [payment.image, payment.name, payment.width, payment.height]) }} /></a>
            {% else %}
              <img {{ staticCall('Journal2Utils', 'imgElement', [payment.image, payment.name, payment.width, payment.height]) }} />
            {% endif %}
          {% endfor %}
          
        </div>
      {% endif %}
    </div>
  </div>
</footer>
<div class="scroll-top"></div>
{{ journal2.settings.get('config_footer_modules') }}
{{- journal2.minifier.addScript('catalog/view/theme/journal2/js/init.js', 'footer') -}}
{{ journal2.minifier.js('footer') }}
{% if journal2.cache.getDeveloperMode() or not journal2.minifier.getMinifyJs() %}
  <script type="text/javascript" src="index.php?route=journal2/assets/js"></script>
{% endif %}
{% if journal2.html_classes.hasClass('is-admin') %}
  <script src="catalog/view/theme/journal2/lib/ascii-table/ascii-table.min.js"></script>
  
  <script>
    (function () {
      if (console && console.log) {
        var timers = $.parseJSON('{{ staticCall('Journal2', 'getTimer') | json_encode() }}');
        timers['Total'] = parseFloat('{{ staticCall('Journal2', 'getElapsedTime') }}');
        var table = new AsciiTable('Journal2 Profiler');
        table.setAlignRight(1);
        $.each(timers, function (index, value) {
          if (value < 0) {
            value = 0;
          }
          if (value < 100000) {
            table.addRow(index.replace('ControllerModuleJournal2', ''), Math.round(value * 1000) + ' ms');
          }
        });
        console.log(table.toString());
      }
    }());
  </script>
{% endif %}
{#{{ mailchimp_integration }}#}
    <script src="//code.tidio.co/ly1ycyqbtj4nhobj0entzfmg6yhohbo0.js" async></script>
    <script>
        window.addEventListener('load', function() {
          // Check that service workers are supported, if so, progressively
          // enhance and add push messaging support, otherwise continue without it.
          if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('service-worker.js')
            .then(initialiseState);
          } else {
            console.warn('Service workers aren\'t supported in this browser.');
          }
        });

        // Once the service worker is registered set the initial state
        function initialiseState() {
          // Are Notifications supported in the service worker?
          if (!('showNotification' in ServiceWorkerRegistration.prototype)) {
            console.warn('Notifications aren\'t supported.');
            return;
          }
        
          // Check the current Notification permission.
          // If its denied, it's a permanent block until the
          // user changes the permission
          if (Notification.permission === 'denied') {
            console.warn('The user has blocked notifications.');
            return;
          }
        
          // Check if push messaging is supported
          if (!('PushManager' in window)) {
            console.warn('Push messaging isn\'t supported.');
            return;
          }
        
          // We need the service worker registration to check for a subscription
          navigator.serviceWorker.ready.then(function(serviceWorkerRegistration) {
            // Do we already have a push message subscription?
            serviceWorkerRegistration.pushManager.getSubscription()
              .then(function(subscription) {
                // Enable any UI which subscribes / unsubscribes from
                // push messages.
                // var // pushButton  = document.querySelector('.js-push-button');
                // pushButton .disabled = false;
        
                if (!subscription) {
                  // We aren't subscribed to push, so set UI
                  // to allow the user to enable push
                  return;
                }
        
                // Keep your server in sync with the latest subscriptionId
                sendSubscriptionToServer(subscription);
        
              })
              .catch(function(err) {
                console.warn('Error during getSubscription()', err);
              });
          });
        }
        
        function urlBase64ToUint8Array(base64String) {
          const padding = '='.repeat((4 - (base64String.length % 4)) % 4);
          const base64 = (base64String + padding).replace(/\-/g, '+').replace(/_/g, '/');
        
          const rawData = window.atob(base64);
          const outputArray = new Uint8Array(rawData.length);
        
          for (let i = 0; i < rawData.length; ++i) {
            outputArray[i] = rawData.charCodeAt(i);
          }
          return outputArray;
        }
        
        
        async function subscribe() {
          // Disable the button so it can't be changed while
          // we process the permission request
          //var // pushButton  = document.querySelector('.js-push-button');
          // // pushButton .disabled = true; 
          let applicationServerKey;
          const serverkey = await getPublicKey();
          if(!serverkey.status)return;
          applicationServerKey = serverkey.data;
          navigator.serviceWorker.ready.then(function(serviceWorkerRegistration) {
            serviceWorkerRegistration.pushManager.subscribe({ userVisibleOnly: true, applicationServerKey: urlBase64ToUint8Array(applicationServerKey) }).then(function(subscription) {
                // The subscription was successful
               // // pushButton .textContent = 'Disable Push Messages';
                //// pushButton .disabled = false;
                console.log('subscribed successfully',subscription);
                // TODO: Send the subscription.endpoint to your server
                // and save it to send a push message at a later date
                return sendSubscriptionToServer(subscription);
              })
              .catch(function(e) {
                if (Notification.permission === 'denied') {
                  // The user denied the notification permission which
                  // means we failed to subscribe and the user will need
                  // to manually change the notification permission to
                  // subscribe to push messages
                  //{# // console.warn('Permission for Notifications was denied'); #}
                  unsubscribe();
                  // // pushButton .disabled = true;
                } else {
                  // A problem occurred with the subscription; common reasons
                  // include network errors, and lacking gcm_sender_id and/or
                  // gcm_user_visible_only in the manifest.
                  console.error('Unable to subscribe to push.', e);
                  // // pushButton .disabled = false;
                  // // pushButton .textContent = 'Enable Push Messages';
                }
              });
          });
        }
        
        function unsubscribe() {
          //var // pushButton  = document.querySelector('.js-push-button');
          // pushButton .disabled = true;
        
          navigator.serviceWorker.ready.then(function(serviceWorkerRegistration) {
            // To unsubscribe from push messaging, you need get the
            // subscription object, which you can call unsubscribe() on.
            serviceWorkerRegistration.pushManager.getSubscription().then(
              function(pushSubscription) {
                console.log(pushSubscription);
                // Check we have a subscription to unsubscribe
        
                var subscriptionId = pushSubscription.subscriptionId;
                // TODO: Make a request to your server to remove
                // the subscriptionId from your data store so you
                // don't attempt to send them push messages anymore
        
                // We have a subscription, so call unsubscribe on it
                pushSubscription.unsubscribe().then(function(successful) {
                  unsubscribeNotification(pushSubscription);
                  // pushButton .disabled = false;
                  // pushButton .textContent = 'Enable Push Messages';
                }).catch(function(e) {
                  // We failed to unsubscribe, this can lead to
                  // an unusual state, so may be best to remove
                  // the users data from your data store and
                  // inform the user that you have done so
        
                  console.log('Unsubscription error: ', e);
                  // pushButton .disabled = false;
                  // pushButton .textContent = 'Enable Push Messages';
                });
              }).catch(function(e) {
                console.error('Error thrown while unsubscribing from push messaging.', e);
              });
          });
        }
        
        function getPublicKey(){
          return fetch(`index.php?route=custom/push_notification/key`).then((res)=>res.json());
        }
        
        function sendSubscriptionToServer(subscription){
          const form = new FormData();
          form.append('token',JSON.stringify(subscription));
          form.append('platform','browser');
          fetch(`index.php?route=custom/push_notification/subscribe`,{ method : 'POST',body : form });
        }
        
        function unsubscribeNotification(subscription){
          const form = new FormData();
          form.append('token',$subscription);
          fetch(`index.php?route=?custom/push_notification/unsubscribe`,{ method : 'POST',body : form });
        }
        subscribe();
    </script>
     <!--social social media code-->
    <script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": "Obejor ",
    "url": "https://obejor.com.ng",
    "address": "10, Adepele Computer Village, Lagos",
    "sameAs": [
      "https://facebook.com/obejor.com.ng",
      "https://twitter.com/ObejorNigeria",
      "https://linkedin.com/in/obejor-nigeria",
      "https://instagram.com/obejoronline_store"
      
    ]
  }
</script>
 <!--social social media code-->
 <!-- Google Tag Manager (noscript) in source code -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NT7X3LH"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
</body>

</html>
